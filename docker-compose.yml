services:
  # db
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"

  # reverse-proxy
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "8080:8080"  # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./certs:/certs  # Mount SSL certificates

  # domain-api
  domain-api:
    image: domain-api
    container_name: domain-api
    build:
      context: ${DomainApiDockerContext}
      dockerfile: ${DomainApiDockerFile}
    expose:
      - 5011
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ASPNETCORE_URLS=http://+:5011
      - USE_SWAGGER=${UseSwagger}
      - ConnectionStrings__LocalDB=${ConnectionStrings__LocalDB}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.domain-api.rule=Host(`domain-api.localhost`)"      
      - "traefik.http.routers.domain-api.entrypoints=websecure"
      - "traefik.http.routers.domain-api.tls=true"
      - "traefik.http.routers.domain-api.tls.domains[0].main=domain-api.localhost"
      - "traefik.http.services.domain-api.loadbalancer.server.port=5011"
    restart: always

  # foodexpress-api
  foodexpress-api:
    image: foodexpress-api
    container_name: foodexpress-api
    build:
      context: ${FoodExpessApiDockerContext}
      dockerfile: ${FoodExpessApiDockerFile}
    expose:
      - 5011
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DOTNET_RUNNING_IN_CONTAINER=true
      - ASPNETCORE_URLS=http://+:5011
      - USE_SWAGGER=${UseSwagger}
      - ConnectionStrings__LocalDB=${ConnectionStrings__LocalDB}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.foodexpress-api.rule=Host(`foodexpress-api.localhost`)"      
      - "traefik.http.routers.foodexpress-api.entrypoints=websecure"
      - "traefik.http.routers.foodexpress-api.tls=true"
      - "traefik.http.routers.foodexpress-api.tls.domains[0].main=foodexpress-api.localhost"
      - "traefik.http.services.foodexpress-api.loadbalancer.server.port=5011"
    restart: always

#   # mongo
#   mongodb:
#     image: mongo:latest
#     container_name: my-mongodb
#     restart: always
#     ports:
#       - "27017:27017"
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#     volumes:
#       - mongo-data:/data/db

# volumes:
#   mongo-data:
#     driver: local